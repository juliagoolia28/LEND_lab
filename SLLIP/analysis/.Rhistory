df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$chrono_age<-as.numeric((as.character(df$chrono_age)))
summary(lm(df$Qvocab_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.NDW+df$Parent.MLU))
summary(lm(df$Qvocab_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$chrono_age<-as.numeric((as.character(df$chrono_age)))
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
#Only run the first time ever
#install.packages(c("dplyr", "tidyr", "readr", "Hmisc", "plyr", "fs", "readxl"))
# Run every time
library(dplyr)
library(tidyr)
library(readr)
#library(Hmisc)
library(plyr)
library(rlang)
library(fs)
library(readxl)
file.list <- list.files(path="/Volumes/juschnei/lendlab/projects/LIDS/data/transcribed_audios/analysis",pattern="*_SMR.CSV", full.names = TRUE)
#initiate dataframe
smr_df <- NULL
# Extract relevant data and combine it
for (file in file.list) {
##Select only the relevant columns
extracted_data <-
read.csv(file, header = FALSE)[c("V1", "V3", "V4")]
smr_df <- rbind(smr_df, extracted_data)
}
names(smr_df)[2]<-"Child"
names(smr_df)[3]<-"Parent"
smr_df_wide<-as.data.frame(split(smr_df, 1:42))
smr_df_wide<-subset(smr_df_wide, select = -c(2:19, 22, 25, 28:43, 46, 49, 52, 55:58,61, 64:76, 79, 82, 85:126))
smr_df_clean <- smr_df_wide %>% dplyr::rename (subject_ID = X1.V1, Child.utterances=X7.Child, Parent.utterances= X7.Parent, Child.VerbalUtt = X8.Child, Parent.VerbalUtt = X8.Parent, Child.WC = X9.Child, Parent.WC = X9.Parent, Child.MLU =X15.Child, Parent.MLU=X15.Parent, Child.Morphemes = X16.Child, Parent.Morphemes = X16.Parent, Child.VerbUtt = X17.Child, Parent.VerbUtt = X17.Parent, Child.avgverbs = X18.Child, Parent.avgverbs = X18.Parent, Child.NTW =X20.Child, Parent.NTW =X20.Parent, Child.NDW = X21.Child, Parent.NDW = X21.Parent, Child.MTLutt = X26.Child, Parent.MTLutt = X26.Parent, Child.MTLword = X27.Child, Parent.MTLword = X27.Parent, Child.Question = X28.Child, Parent.Question = X28.Parent)
smr_df_clean$record_id <- parse_number(smr_df_clean$subject_ID)
write.csv(smr_df_clean, "/Volumes/juschnei/lendlab/projects/LIDS/data/organized_salt_output_files/smr_5.csv")
ast <-read_excel("/Volumes/juschnei/lendlab/projects/LIDS/participant_database.xlsx", 2)
ast$record_id <- parse_number(ast$Participant_ID)
df<-merge(smr_df_clean,ast,by= "record_id")
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
#df$chrono_age<-as.numeric((as.character(df$chrono_age)))
summary(lm(df$Qprocess_ss~df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
summary(lm(df$Qprocess_%~df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
# Run every time
library(dplyr)
library(tidyr)
library(readr)
#library(Hmisc)
library(plyr)
library(rlang)
library(fs)
library(readxl)
file.list <- list.files(path="/Volumes/juschnei/lendlab/projects/LIDS/data/transcribed_audios/analysis",pattern="*_SMR.CSV", full.names = TRUE)
#initiate dataframe
smr_df <- NULL
# Extract relevant data and combine it
for (file in file.list) {
##Select only the relevant columns
extracted_data <-
read.csv(file, header = FALSE)[c("V1", "V3", "V4")]
smr_df <- rbind(smr_df, extracted_data)
}
names(smr_df)[2]<-"Child"
names(smr_df)[3]<-"Parent"
smr_df_wide<-as.data.frame(split(smr_df, 1:42))
smr_df_wide<-subset(smr_df_wide, select = -c(2:19, 22, 25, 28:43, 46, 49, 52, 55:58,61, 64:76, 79, 82, 85:126))
smr_df_clean <- smr_df_wide %>% dplyr::rename (subject_ID = X1.V1, Child.utterances=X7.Child, Parent.utterances= X7.Parent, Child.VerbalUtt = X8.Child, Parent.VerbalUtt = X8.Parent, Child.WC = X9.Child, Parent.WC = X9.Parent, Child.MLU =X15.Child, Parent.MLU=X15.Parent, Child.Morphemes = X16.Child, Parent.Morphemes = X16.Parent, Child.VerbUtt = X17.Child, Parent.VerbUtt = X17.Parent, Child.avgverbs = X18.Child, Parent.avgverbs = X18.Parent, Child.NTW =X20.Child, Parent.NTW =X20.Parent, Child.NDW = X21.Child, Parent.NDW = X21.Parent, Child.MTLutt = X26.Child, Parent.MTLutt = X26.Parent, Child.MTLword = X27.Child, Parent.MTLword = X27.Parent, Child.Question = X28.Child, Parent.Question = X28.Parent)
smr_df_clean$record_id <- parse_number(smr_df_clean$subject_ID)
#write.csv(smr_df_clean, "/Volumes/juschnei/lendlab/projects/LIDS/data/organized_salt_output_files/smr_5.csv")
ast <-read_excel("/Volumes/juschnei/lendlab/projects/LIDS/participant_database.xlsx", 2)
ast$record_id <- parse_number(ast$Participant_ID)
df<-merge(smr_df_clean,ast,by= "record_id")
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
#df$chrono_age<-as.numeric((as.character(df$chrono_age)))
summary(lm(df$Qprocess_ss~df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
summary(lm(df$Qprocess_ss~df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
View(df)
pcor.test(x = df$Parent.NDW  , y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
# Run every time
library(dplyr)
library(tidyr)
library(readr)
#library(Hmisc)
library(plyr)
library(rlang)
library(fs)
library(readxl)
library(ppcor)
pcor.test(x = df$Parent.NDW  , y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
#df$chrono_age<-as.numeric((as.character(df$chrono_age)))
pcor.test(x = df$Parent.NDW  , y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
pcor.test(x = df$Parent.NDW  , y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.NDW, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$Qsyntax_ss<-as.numeric((as.character(df$Qsyntax_ss)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
#df$chrono_age<-as.numeric((as.character(df$chrono_age)))
summary(lm(df$Qprocess_ss~df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
summary(lm(df$Qsyntax_ss~df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
summary(lm(df$Qvocab_ss~df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
summary(lm(df$Qprocess_ss~df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
summary(lm(df$Qsyntax_ss~df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
summary(lm(df$Qvocab_ss~df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
summary(lm(df$Qprocess_ss~df$Parent.utterances+df$Parent.MLU))
summary(lm(df$Qsyntax_ss~df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
summary(lm(df$Qvocab_ss~df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
df$chrono_age<-as.factor((as.character(df$chrono_age)))
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
df$chrono_age<-as.numeric((as.character(df$chrono_age)))
View(df)
#Only run the first time ever
#install.packages(c("dplyr", "tidyr", "readr", "Hmisc", "plyr", "fs", "readxl"))
# Run every time
library(dplyr)
library(tidyr)
library(readr)
#library(Hmisc)
library(plyr)
library(rlang)
library(fs)
library(readxl)
library(ppcor)
file.list <- list.files(path="/Volumes/juschnei/lendlab/projects/LIDS/data/transcribed_audios/analysis",pattern="*_SMR.CSV", full.names = TRUE)
#initiate dataframe
smr_df <- NULL
# Extract relevant data and combine it
for (file in file.list) {
##Select only the relevant columns
extracted_data <-
read.csv(file, header = FALSE)[c("V1", "V3", "V4")]
smr_df <- rbind(smr_df, extracted_data)
}
names(smr_df)[2]<-"Child"
names(smr_df)[3]<-"Parent"
smr_df_wide<-as.data.frame(split(smr_df, 1:42))
smr_df_wide<-subset(smr_df_wide, select = -c(2:19, 22, 25, 28:43, 46, 49, 52, 55:58,61, 64:76, 79, 82, 85:126))
smr_df_clean <- smr_df_wide %>% dplyr::rename (subject_ID = X1.V1, Child.utterances=X7.Child, Parent.utterances= X7.Parent, Child.VerbalUtt = X8.Child, Parent.VerbalUtt = X8.Parent, Child.WC = X9.Child, Parent.WC = X9.Parent, Child.MLU =X15.Child, Parent.MLU=X15.Parent, Child.Morphemes = X16.Child, Parent.Morphemes = X16.Parent, Child.VerbUtt = X17.Child, Parent.VerbUtt = X17.Parent, Child.avgverbs = X18.Child, Parent.avgverbs = X18.Parent, Child.NTW =X20.Child, Parent.NTW =X20.Parent, Child.NDW = X21.Child, Parent.NDW = X21.Parent, Child.MTLutt = X26.Child, Parent.MTLutt = X26.Parent, Child.MTLword = X27.Child, Parent.MTLword = X27.Parent, Child.Question = X28.Child, Parent.Question = X28.Parent)
smr_df_clean$record_id <- parse_number(smr_df_clean$subject_ID)
#write.csv(smr_df_clean, "/Volumes/juschnei/lendlab/projects/LIDS/data/organized_salt_output_files/smr_5.csv")
ast <-read_excel("/Volumes/juschnei/lendlab/projects/LIDS/participant_database.xlsx", 2)
ast$record_id <- parse_number(ast$Participant_ID)
df<-merge(smr_df_clean,ast,by= "record_id")
#Only run the first time ever
#install.packages(c("dplyr", "tidyr", "readr", "Hmisc", "plyr", "fs", "readxl"))
# Run every time
library(dplyr)
library(tidyr)
library(readr)
#library(Hmisc)
library(plyr)
library(rlang)
library(fs)
library(readxl)
library(ppcor)
file.list <- list.files(path="/Volumes/juschnei/lendlab/projects/LIDS/data/transcribed_audios/analysis",pattern="*_SMR.CSV", full.names = TRUE)
#initiate dataframe
smr_df <- NULL
# Extract relevant data and combine it
for (file in file.list) {
##Select only the relevant columns
extracted_data <-
read.csv(file, header = FALSE)[c("V1", "V3", "V4")]
smr_df <- rbind(smr_df, extracted_data)
}
names(smr_df)[2]<-"Child"
names(smr_df)[3]<-"Parent"
smr_df_wide<-as.data.frame(split(smr_df, 1:42))
smr_df_wide<-subset(smr_df_wide, select = -c(2:19, 22, 25, 28:43, 46, 49, 52, 55:58,61, 64:76, 79, 82, 85:126))
smr_df_clean <- smr_df_wide %>% dplyr::rename (subject_ID = X1.V1, Child.utterances=X7.Child, Parent.utterances= X7.Parent, Child.VerbalUtt = X8.Child, Parent.VerbalUtt = X8.Parent, Child.WC = X9.Child, Parent.WC = X9.Parent, Child.MLU =X15.Child, Parent.MLU=X15.Parent, Child.Morphemes = X16.Child, Parent.Morphemes = X16.Parent, Child.VerbUtt = X17.Child, Parent.VerbUtt = X17.Parent, Child.avgverbs = X18.Child, Parent.avgverbs = X18.Parent, Child.NTW =X20.Child, Parent.NTW =X20.Parent, Child.NDW = X21.Child, Parent.NDW = X21.Parent, Child.MTLutt = X26.Child, Parent.MTLutt = X26.Parent, Child.MTLword = X27.Child, Parent.MTLword = X27.Parent, Child.Question = X28.Child, Parent.Question = X28.Parent)
smr_df_clean$record_id <- parse_number(smr_df_clean$subject_ID)
#write.csv(smr_df_clean, "/Volumes/juschnei/lendlab/projects/LIDS/data/organized_salt_output_files/smr_5.csv")
ast <-read_excel("/Volumes/juschnei/lendlab/projects/LIDS/participant_database.xlsx", 2)
ast$record_id <- parse_number(ast$Participant_ID)
df<-merge(smr_df_clean,ast,by= "record_id")
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$Qsyntax_ss<-as.numeric((as.character(df$Qsyntax_ss)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$chrono_age<-as.numeric((as.character(df$chrono_age)))
#Only run the first time ever
#install.packages(c("dplyr", "tidyr", "readr", "Hmisc", "plyr", "fs", "readxl"))
# Run every time
library(dplyr)
library(tidyr)
library(readr)
#library(Hmisc)
library(plyr)
library(rlang)
library(fs)
library(readxl)
library(ppcor)
file.list <- list.files(path="/Volumes/juschnei/lendlab/projects/LIDS/data/transcribed_audios/analysis",pattern="*_SMR.CSV", full.names = TRUE)
#initiate dataframe
smr_df <- NULL
# Extract relevant data and combine it
for (file in file.list) {
##Select only the relevant columns
extracted_data <-
read.csv(file, header = FALSE)[c("V1", "V3", "V4")]
smr_df <- rbind(smr_df, extracted_data)
}
names(smr_df)[2]<-"Child"
names(smr_df)[3]<-"Parent"
smr_df_wide<-as.data.frame(split(smr_df, 1:42))
smr_df_wide<-subset(smr_df_wide, select = -c(2:19, 22, 25, 28:43, 46, 49, 52, 55:58,61, 64:76, 79, 82, 85:126))
smr_df_clean <- smr_df_wide %>% dplyr::rename (subject_ID = X1.V1, Child.utterances=X7.Child, Parent.utterances= X7.Parent, Child.VerbalUtt = X8.Child, Parent.VerbalUtt = X8.Parent, Child.WC = X9.Child, Parent.WC = X9.Parent, Child.MLU =X15.Child, Parent.MLU=X15.Parent, Child.Morphemes = X16.Child, Parent.Morphemes = X16.Parent, Child.VerbUtt = X17.Child, Parent.VerbUtt = X17.Parent, Child.avgverbs = X18.Child, Parent.avgverbs = X18.Parent, Child.NTW =X20.Child, Parent.NTW =X20.Parent, Child.NDW = X21.Child, Parent.NDW = X21.Parent, Child.MTLutt = X26.Child, Parent.MTLutt = X26.Parent, Child.MTLword = X27.Child, Parent.MTLword = X27.Parent, Child.Question = X28.Child, Parent.Question = X28.Parent)
smr_df_clean$record_id <- parse_number(smr_df_clean$subject_ID)
#write.csv(smr_df_clean, "/Volumes/juschnei/lendlab/projects/LIDS/data/organized_salt_output_files/smr_5.csv")
ast <-read_excel("/Volumes/juschnei/lendlab/projects/LIDS/participant_database.xlsx", 2)
ast$record_id <- parse_number(ast$Participant_ID)
df<-merge(smr_df_clean,ast,by= "record_id")
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$Qsyntax_ss<-as.numeric((as.character(df$Qsyntax_ss)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$chrono_age<-as.numeric((as.character(df$chrono_age)))
#pcor.test(x = df$Parent.NDW, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.NDW, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.MLU, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
summary(lm(df$Qsyntax_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
summary(lm(df$Qvocab_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.MLU))
summary(lm(df$Qsyntax_ss~df$chrono_age+df$Parent.MLU))
summary(lm(df$Qvocab_ss~df$chrono_age+df$Parent.MLU))
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.MLU))
summary(lm(df$Qsyntax_ss~df$chrono_age+df$Parent.MLU))
summary(lm(df$Qvocab_ss~df$chrono_age+df$Parent.MLU))
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.NDW))
summary(lm(df$Qsyntax_ss~df$chrono_age+df$Parent.NDW))
summary(lm(df$Qvocab_ss~df$chrono_age+df$Parent.NDW))
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
summary(lm(df$Qsyntax_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
summary(lm(df$Qvocab_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
pcor.test(x = df$Parent.MLU, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.NDW, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.NTW, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.MLU, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.NDW, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
#pcor.test(x = df$Parent.NTW, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.VerbalUtt, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Parent.NTW<-as.numeric((as.character(df$Parent.NTW)))
df$Parent.VerbalUtt<-as.numeric((as.character(df$Parent.VerbalUtt)))
df$Parent.MTLutt<-as.numeric((as.character(df$Parent.MTLutt)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$Qsyntax_ss<-as.numeric((as.character(df$Qsyntax_ss)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$chrono_age<-as.numeric((as.character(df$chrono_age)))
pcor.test(x = df$Parent.MLU, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.NDW, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.NTW, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.VerbalUtt, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.MTLutt, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.MLU, y = df$Qprocess_ss, z = df[, c("Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.NDW, y = df$Qprocess_ss, z = df[, c("Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.NTW, y = df$Qprocess_ss, z = df[, c("Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.VerbalUtt, y = df$Qprocess_ss, z = df[, c("Parent.utterances","Child.utterances")])
pcor.test(x = df$Parent.MTLutt, y = df$Qprocess_ss, z = df[, c("Parent.utterances","Child.utterances")])
summary(lm(df$ppvt_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Parent.NTW<-as.numeric((as.character(df$Parent.NTW)))
df$Parent.VerbalUtt<-as.numeric((as.character(df$Parent.VerbalUtt)))
df$Parent.MTLutt<-as.numeric((as.character(df$Parent.MTLutt)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$Qsyntax_ss<-as.numeric((as.character(df$Qsyntax_ss)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$ppvt_ss<-as.numeric((as.character(df$ppvt_ss)))
df$chrono_age<-as.numeric((as.character(df$chrono_age)))
pcor.test(x = df$Parent.MTLutt, y = df$ppvt_raw, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$NDW, y = df$ppvt_raw, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
df$ppvt_raw<-as.numeric((as.character(df$ppvt_raw)))
pcor.test(x = df$NDW, y = df$ppvt_raw, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
View(df)
pcor.test(x = df$Parent.NDW, y = df$ppvt_raw, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
summary(lm(df$ppvt_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.NDW))
summary(lm(df$ppvt_ss~df$chrono_age+df$Parent.utterances+df$Child.utterances+df$Parent.MLU))
View(df)
rcorr(df)
# Run every time
library(dplyr)
library(tidyr)
library(readr)
library(Hmisc)
library(plyr)
library(rlang)
library(fs)
library(readxl)
library(ppcor)
library(corrplot)
rcorr(df)
res2 <- rcorr(as.matrix(df))
res2<-rcorr(as.matrix(df[,3:24,34,41,45,47,49]))
res2<-rcorr(as.matrix(df[3:24,34,41,45,47,49]))
res2<-rcorr(as.matrix(df[,3:24]))
cor(df[,c(3:24,34,41,45,47,49)][,1])
dtf <- subset(df, select = c("Parent.utterances","Child.utterances","Parent.MLU","Parent.NDW","Qprocess_ss","Qsyntax_ss","Qvocab_ss"))
cor(dtf)
rcorr(dtf)
cor(dtf)
corr.test(dtf)
library(psych)
corr.test(dtf)
dtf <- subset(df, select = c("Parent.utterances","Child.utterances","Parent.MLU","Parent.NDW","Parent.VerbalUtt","Parent.MTLutt", "Qprocess_ss","Qsyntax_ss","Qvocab_ss"))
corr.test(dtf)
dtf <- subset(df, select = c("Parent.utterances","Child.utterances","Parent.MLU","Parent.NDW", "Qprocess_ss","Qsyntax_ss","Qvocab_ss"))
corr.test(dtf)
dtf <- subset(df, select = c("Parent.utterances","Child.utterances","Parent.MLU","Parent.NDW","Parent.VerbalUtt","Parent.MTLutt", "Qprocess_ss","Qsyntax_ss","Qvocab_ss"))
corr.test(dtf)
dtf <- subset(df, select = c("Parent.utterances","Child.utterances","Parent.MLU","Parent.NDW","Parent.VerbalUtt","Parent.MTLutt", "Qprocess_ss","Qsyntax_ss","Qvocab_ss","ppvt_ss"))
corr.test(dtf)
pcor.test(x = df$Parent.VerbalUtt, y = df$Qprocess_ss, z = df[, c("Parent.utterances","Child.utterances")])
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.utterances))
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.MTLutt))
summary(lm(df$Qprocess_ss~df$Parent.MTLutt))
summary(lm(df$Qprocess_ss~df$chrono_age+df$Parent.VerbalUtt))
#Only run the first time ever
#install.packages(c("dplyr", "tidyr", "readr", "Hmisc", "plyr", "fs", "readxl"))
# Run every time
library(dplyr)
library(tidyr)
library(readr)
library(Hmisc)
library(plyr)
library(rlang)
library(fs)
library(readxl)
library(ppcor)
## data analysis of language input, mri and CTOPP
# language input: Child.MLU, Parent.MLU; Child.NTW, Parent.NTW; Child.NDW, Parent.NDW
# covariate: participant_age,Child.utterances, Parent.utterances
# CTOPP: ctopp_nwr_raw_score, ctopp_nwr_scaled, ctopp_nwr_percent
# rm(list=ls())
all_data_ind <- read.csv("merge_mri_behav.csv")
#Only run the first time ever
#install.packages(c("dplyr", "tidyr", "readr", "Hmisc", "plyr", "fs", "readxl"))
# Run every time
library(dplyr)
library(tidyr)
library(readr)
library(Hmisc)
library(plyr)
library(rlang)
library(fs)
library(readxl)
library(ppcor)
library(corrplot)
library(psych)
file.list <- list.files(path="/Volumes/juschnei/lendlab/projects/LIDS/data/transcribed_audios/analysis",pattern="*_SMR.CSV", full.names = TRUE)
#initiate dataframe
smr_df <- NULL
# Extract relevant data and combine it
for (file in file.list) {
##Select only the relevant columns
extracted_data <-
read.csv(file, header = FALSE)[c("V1", "V3", "V4")]
smr_df <- rbind(smr_df, extracted_data)
}
names(smr_df)[2]<-"Child"
names(smr_df)[3]<-"Parent"
smr_df_wide<-as.data.frame(split(smr_df, 1:42))
smr_df_wide<-subset(smr_df_wide, select = -c(2:19, 22, 25, 28:43, 46, 49, 52, 55:58,61, 64:76, 79, 82, 85:126))
smr_df_clean <- smr_df_wide %>% dplyr::rename (subject_ID = X1.V1, Child.utterances=X7.Child, Parent.utterances= X7.Parent, Child.VerbalUtt = X8.Child, Parent.VerbalUtt = X8.Parent, Child.WC = X9.Child, Parent.WC = X9.Parent, Child.MLU =X15.Child, Parent.MLU=X15.Parent, Child.Morphemes = X16.Child, Parent.Morphemes = X16.Parent, Child.VerbUtt = X17.Child, Parent.VerbUtt = X17.Parent, Child.avgverbs = X18.Child, Parent.avgverbs = X18.Parent, Child.NTW =X20.Child, Parent.NTW =X20.Parent, Child.NDW = X21.Child, Parent.NDW = X21.Parent, Child.MTLutt = X26.Child, Parent.MTLutt = X26.Parent, Child.MTLword = X27.Child, Parent.MTLword = X27.Parent, Child.Question = X28.Child, Parent.Question = X28.Parent)
smr_df_clean$record_id <- parse_number(smr_df_clean$subject_ID)
#write.csv(smr_df_clean, "/Volumes/juschnei/lendlab/projects/LIDS/data/organized_salt_output_files/smr_5.csv")
ast <-read_excel("/Volumes/juschnei/lendlab/projects/LIDS/participant_database.xlsx", 2)
ast$record_id <- parse_number(ast$Participant_ID)
df<-merge(smr_df_clean,ast,by= "record_id")
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Parent.NTW<-as.numeric((as.character(df$Parent.NTW)))
df$Parent.VerbalUtt<-as.numeric((as.character(df$Parent.VerbalUtt)))
df$Parent.MTLutt<-as.numeric((as.character(df$Parent.MTLutt)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$Qsyntax_ss<-as.numeric((as.character(df$Qsyntax_ss)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$ppvt_ss<-as.numeric((as.character(df$ppvt_ss)))
df$ppvt_raw<-as.numeric((as.character(df$ppvt_raw)))
df$chrono_age<-as.numeric((as.character(df$chrono_age)))
dtf <- subset(df, select = c("Parent.utterances","Child.utterances","Parent.MLU","Parent.NDW","Parent.VerbalUtt","Parent.MTLutt", "Qprocess_ss","Qsyntax_ss","Qvocab_ss","ppvt_ss"))
corr.test(dtf)
dtf <- subset(df, select = c("Parent.utterances","Child.utterances","Parent.MLU","Parent.NDW","Parent.VerbalUtt","Parent.MTLutt", "Child.NTW","Child.NDW","Child.MLU","Qprocess_ss","Qsyntax_ss","Qvocab_ss","ppvt_ss"))
corr.test(dtf)
df$Qprocess_ss<-as.numeric((as.character(df$Qprocess_ss)))
df$Parent.utterances<-as.numeric((as.character(df$Parent.utterances)))
df$Child.utterances<-as.numeric((as.character(df$Child.utterances)))
df$Parent.NDW<-as.numeric((as.character(df$Parent.NDW)))
df$Parent.MLU<-as.numeric((as.character(df$Parent.MLU)))
df$Parent.NTW<-as.numeric((as.character(df$Parent.NTW)))
df$Child.NDW<-as.numeric((as.character(df$Child.NDW)))
df$Child.MLU<-as.numeric((as.character(df$Child.MLU)))
df$Child.NTW<-as.numeric((as.character(df$Child.NTW)))
df$Parent.VerbalUtt<-as.numeric((as.character(df$Parent.VerbalUtt)))
df$Parent.MTLutt<-as.numeric((as.character(df$Parent.MTLutt)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$Qsyntax_ss<-as.numeric((as.character(df$Qsyntax_ss)))
df$Qvocab_ss<-as.numeric((as.character(df$Qvocab_ss)))
df$ppvt_ss<-as.numeric((as.character(df$ppvt_ss)))
df$ppvt_raw<-as.numeric((as.character(df$ppvt_raw)))
df$chrono_age<-as.numeric((as.character(df$chrono_age)))
dtf <- subset(df, select = c("Parent.utterances","Child.utterances","Parent.MLU","Parent.NDW","Parent.VerbalUtt","Parent.MTLutt", "Child.NTW","Child.NDW","Child.MLU","Qprocess_ss","Qsyntax_ss","Qvocab_ss","ppvt_ss"))
corr.test(dtf)
pcor.test(x = df$Child.NDW, y = df$Qprocess_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Child.NDW, y = df$Qvocab_ss, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = df$Child.NDW, y = df$Qvocab_ss, z = df[, c("Parent.utterances","Child.utterances")])
pcor.test(x = df$Child.NDW, y = df$Qvocab_ss, z = df[, c("Child.utterances")])
pcor.test(x = df$Child.NDW, y = df$ppvt_ss, z = df[, c("Parent.utterances","Child.utterances")])
pcor.test(x = df$Child.NDW, y = df$ppvt_raw, z = df[, c("Parent.utterances","Child.utterances")])
summary(lm(df$Child.NDW~df$ppvt_ss+df$Qvocab_ss))
summary(lm(df$Child.NDW~df$Child.utterances+df$ppvt_ss+df$Qvocab_ss))
setwd ("~/LEND_lab/SLLIP/analysis/")
all_data_ind <- read.csv("merge_mri_behav.csv")
all_data_ind$Child.MLU_z <-as.numeric(scale(all_data_ind$Child.MLU))
all_data_ind$Parent.MLU_z <- as.numeric(scale(all_data_ind$Parent.MLU))
all_data_ind$Child.NTW_z <- as.numeric(scale(all_data_ind$Child.NTW))
all_data_ind$Parent.NTW_z <- as.numeric(scale(all_data_ind$Parent.NTW))
all_data_ind$Child.NDW_z <- as.numeric(scale(all_data_ind$Child.NDW))
all_data_ind$Parent.NDW_z <- as.numeric(scale(all_data_ind$Parent.NDW))
all_data_ind$ctopp_nwr_raw_score_z <- as.numeric(scale(all_data_ind$ctopp_nwr_raw_score))
# all_data_ind$ctopp_nwr_scaled_z <- as.numeric(scale(all_data_ind$ctopp_nwr_scaled))
all_data_ind$ctopp_nwr_percent_z <- as.numeric(scale(all_data_ind$ctopp_nwr_percent))
all_data_ind$participant_age_z <- as.numeric(scale(all_data_ind$participant_age))
all_data_ind$Child.utterances_z <- as.numeric(scale(all_data_ind$Child.utterances))
all_data_ind$Parent.utterances_z <- as.numeric(scale(all_data_ind$Parent.utterances))
par.r.input<-partial.r(data=all_data_ind, x=c('Child.MLU', 'Parent.MLU', 'Child.NTW','Parent.NTW', 'Child.NDW','Parent.NDW','ctopp_nwr_raw_score'), y=c("chrono_age","Parent.utterances","Child.utterances"))
lowerMat(par.r.input)
cor_matrx <-cor(all_data_ind[, c('Child.utterances', 'Parent.utterances','Child.MLU', 'Parent.MLU', 'Child.NTW','Parent.NTW', 'Child.NDW','Parent.NDW','ctopp_nwr_raw_score')])
View(cor_matrx)
View(cor_matrx)
setwd ("~/LEND_lab/SLLIP/analysis/")
behav_data <- read.csv("merge_behav_data.csv")
behav_data$Child.MLU_z <-as.numeric(scale(behav_data$Child.MLU))
behav_data$Parent.MLU_z <- as.numeric(scale(behav_data$Parent.MLU))
behav_data$Child.NTW_z <- as.numeric(scale(behav_data$Child.NTW))
behav_data$Parent.NTW_z <- as.numeric(scale(behav_data$Parent.NTW))
behav_data$Child.NDW_z <- as.numeric(scale(behav_data$Child.NDW))
behav_data$Parent.NDW_z <- as.numeric(scale(behav_data$Parent.NDW))
behav_data$ctopp_nwr_raw_score_z <- as.numeric(scale(behav_data$ctopp_nwr_raw_score))
# behav_data$ctopp_nwr_scaled_z <- as.numeric(scale(behav_data$ctopp_nwr_scaled))
behav_data$ctopp_nwr_percent_z <- as.numeric(scale(behav_data$ctopp_nwr_percent))
behav_data$chrono_age_z <- as.numeric(scale(behav_data$chrono_age))
behav_data$Child.utterances_z <- as.numeric(scale(behav_data$Child.utterances))
behav_data$Parent.utterances_z <- as.numeric(scale(behav_data$Parent.utterances))
par.r.input<-partial.r(data=behav_data, x=c('Child.MLU', 'Parent.MLU', 'Child.NTW','Parent.NTW', 'Child.NDW','Parent.NDW','ctopp_nwr_raw_score'), y=c("chrono_age","Parent.utterances","Child.utterances"))
lowerMat(par.r.input)
par.r.input<-partial.r(data=behav_data, x=c('Child.MLU', 'Parent.MLU', 'Child.NTW','Parent.NTW', 'Child.NDW','Parent.NDW','ctopp_nwr_raw_score'), y=c("chrono_age"))
lowerMat(par.r.input)
par.r.input<-partial.r(data=behav_data, x=c('Child.MLU', 'Parent.MLU', 'Child.NTW','Parent.NTW', 'Child.NDW','Parent.NDW','ctopp_nwr_raw_score'), y=c("chrono_age","Parent.utterances"))
lowerMat(par.r.input)
par.r.input<-partial.r(data=behav_data, x=c('Child.MLU', 'Parent.MLU', 'Child.NTW','Parent.NTW', 'Child.NDW','Parent.NDW','ctopp_nwr_raw_score'), y=c("chrono_age","Parent.utterances","Child.utterances"))
lowerMat(par.r.input)
pcor.test(x = df$Parent.MLU, y = df$ctopp_nwr_percent, z = df[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = behav_data$Parent.MLU, y = behav_data$ctopp_nwr_percent, z = behav_data[, c("chrono_age","Parent.utterances","Child.utterances")])
pcor.test(x = behav_data$Parent.MLU, y = behav_data$ctopp_nwr_raw_score, z = behav_data[, c("chrono_age","Parent.utterances","Child.utterances")])
summary(lm(behav_data$ctopp_nwr_scaled ~ behav_data$chrono_age + behav_data$Parent.utterances + behav_data$Parent.MLU))
summary(lm(behav_data$ctopp_nwr_scaled ~ behav_data$chrono_age + behav_data$Parent.utterances + behav_data$Parent.MLU + behav_data$Parent.NDW))
summary(lm(behav_data$ctopp_nwr_scaled ~ behav_data$chrono_age + behav_data$Parent.utterances))
summary(lm(behav_data$ctopp_nwr_scaled ~ behav_data$chrono_age + behav_data$Parent.NTW))
behav_data$ctopp_nwr_scaled_z <- as.numeric(scale(behav_data$ctopp_nwr_scaled))
summary(lm(behav_data$ctopp_nwr_scaled_z ~ behav_data$chrono_age_z + behav_data$Parent.NTW_z))
View(behav_data)
